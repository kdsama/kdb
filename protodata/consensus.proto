// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/kdb/consensus/protodata";
// option java_multiple_files = true;
// option java_package = "io.grpc.examples.helloworld";
// option java_outer_classname = "HelloWorldProto";

package consensus;

// The greeting service definition.
service Consensus {
  // Sends a greeting
  rpc SendRecord (WalEntry) returns (WalResponse) {}
  rpc Ack(Hearbeat) returns (HearbeatResponse) {}
  rpc Get(GetKey) returns (GetResponse) {}
  rpc Set(SetKey) returns (SetKeyResponse) {}
  rpc GetMany(GetSeveralKeys) returns (GetSeveralResponse) {}
  rpc Broadcast(BroadcastNode) returns (BroadcastNodeResponse) {}
  rpc Vote(VoteNode) returns (VoteNodeResponse) {} 
  rpc LeaderInfo(AskLeader) returns (LeaderInfoResponse) {}
}

// The request message containing the user's name.
message WalEntry {
  bytes entry = 1;
  int32 status = 2;
}

// The response message containing the greetings
message WalResponse {
  string message = 1;
 
}

message SetKey {
  string key = 1 ;
  string value = 2 ; 
}

message SetKeyResponse {
  string message = 1; 
}


message GetKey {
  string key = 1 ; 
}
message GetResponse { 
  string value = 1; 
}

message GetSeveralKeys {
  string key = 1 ;
}

message GetSeveralResponse {
  repeated string value = 1 ;
}


message Hearbeat {
  string message = 1 ;
}

message HearbeatResponse {
  string message = 1 ;
}

message BroadcastNode {
  repeated string addr = 1 ; 
  string leader = 2 ; 
}
message BroadcastNodeResponse {
  string message = 1 ; 
}

message VoteNode {
  string leader = 1 ; 
  int32 Term = 2 ; 
}
message VoteNodeResponse {
  string leader = 1; 
  bool status = 2 ; 
}

message AskLeader{}
message LeaderInfoResponse {
  string leader = 1;
}